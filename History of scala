## Task one is about loading data in the library
# Importing pandas
import pandas as pd

# ... YOUR CODE FOR TASK 1 ...

# Loading in the data
pulls_one = pd.read_csv('datasets/pulls_2011-2013.csv')
pulls_two = pd.read_csv('datasets/pulls_2014-2018.csv')
pull_files = pd.read_csv('datasets/pull_files.csv') 

##check if data has been loaded
print(pulls_one.head())
print(pulls_two.head())
print(pull_files.head())

##task two we will append the two dataset to have complete data; then we need also to convert the date from a string to a date so we can sort afterwards to 
#to have a proper sorted time series
pulls = pulls_one.append(pulls_two,ignore_index=True)
print(pulls.head())

##Converting date to date time from a string
# Append pulls_one to pulls_two
pulls = pulls_one.append(pulls_two,ignore_index=True)
print(pulls.head())
# Convert the date for the pulls object
pulls['date'] = pd.to_datetime(pulls["date"],utc=True)
print(pulls.head())

# Merge the two DataFrames
data = pulls.merge(pull_files,on='pid')
print(data.head())
%matplotlib inline

# Create a column that will store the month
#df['year'] = pd.DatetimeIndex(df['birth_date']).year
data['month'] = pd.DatetimeIndex(data['date']).month

# Create a column that will store the year
data['year'] = pd.DatetimeIndex(data['date']).year

#verify that month and year variables have been created
print(data['year'].head())
print(data['month'].head())

# Group by the month and year and count the pull requests

counts = data.groupby(["year","month"])['pid'].count()

# Plot the results
counts.plot(kind='bar', figsize = (12,4))

# Required for matplotlib
%matplotlib inline

# Group by the submitter
by_user = data.groupby(["user"])['pid'].count()

# Plot the histogram
by_user.plot(kind='hist',bins=30,figsize = (15,10))

# Identify the last 10 pull requests
last_10 = pulls.nlargest(10,'date')
print(last_10.head())
# Join the two data sets
joined_pr = last_10.merge(pull_files,on='pid')

# Identify the unique files
files = set(joined_pr['file'])

# Print the results
print(files)
